<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="Message">
    <!-- Alias Map Defined -->
    <typeAlias alias="MessageQuery" type="com.chattingus.query.MessageQuery"/>
    <typeAlias alias="Message" type="com.chattingus.domain.Message"/>
    <resultMap id="message" class="Message">
        <result property="mId" column="m_id"/>
        <result property="fromUserId" column="from_user_id"/>
        <result property="toUserId" column="to_user_id"/>
        <result property="content" column="content"/>
        <result property="readOrNot" column="read_or_not"/>
        <result property="messageType" column="message_type"/>
        <result property="sendTime" column="send_time"/>
    </resultMap>
    <!-- Select SQL -->
    <sql id="message.selector">
        SELECT
        <dynamic>
            <isNotEmpty property="fields">
                $fields$
            </isNotEmpty>
            <isEmpty property="fields">
                m_id , from_user_id , to_user_id , content , read_or_not , message_type , send_time
            </isEmpty>
        </dynamic>
        FROM message
    </sql>
    <sql id="messageList.where">
        <dynamic prepend=" WHERE ">
            <isNotEmpty property="mId" prepend=" AND ">
                m_id=#mId#
            </isNotEmpty>
            <isNotEmpty property="fromUserId" prepend=" AND ">
                from_user_id=#fromUserId#
            </isNotEmpty>
            <isNotEmpty property="toUserId" prepend=" AND ">
                to_user_id=#toUserId#
            </isNotEmpty>
            <isNotEmpty property="content" prepend=" AND ">
                content=#content#
            </isNotEmpty>
            <isNotEmpty property="readOrNot" prepend=" AND ">
                read_or_not=#readOrNot#
            </isNotEmpty>
            <isNotEmpty property="messageType" prepend=" AND ">
                message_type=#messageType#
            </isNotEmpty>
            <isNotEmpty property="sendTimeStart" prepend=" AND ">
                <![CDATA[  send_time >= #sendTimeStart# ]]>
            </isNotEmpty>
            <isNotEmpty property="sendTimeEnd" prepend=" AND ">
                <![CDATA[  send_time <= #sendTimeEnd# ]]>
            </isNotEmpty>
            <isNotEmpty property="sendTimeEqual" prepend=" AND ">
                <![CDATA[  send_time = #sendTimeEqual# ]]>
            </isNotEmpty>
        </dynamic>
    </sql>

    <!-- 用#号会导致druid连接池报错 -->
    <sql id="messageList.order">
        <dynamic prepend=" ORDER BY ">
            <isNotEmpty property="orderFields">
                <iterate property="orderFields" conjunction="," open="" close="">
                    $orderFields[].fieldName$ $orderFields[].order$
                </iterate>
            </isNotEmpty>
        </dynamic>
    </sql>

    <sql id="messageList.limit">
        <dynamic prepend=" LIMIT  ">
            <isNotEmpty property="startRow">
                #startRow#,#pageSize#
            </isNotEmpty>
        </dynamic>
    </sql>

    <!-- 根据主键查询 -->
    <select id="Message.getMessageByKey" resultMap="message" parameterClass="hashMap">
        SELECT m_id , from_user_id , to_user_id , content , read_or_not , message_type , send_time FROM message
        WHERE
        m_id=#mId#
    </select>
    <select id="Message.getMessagesByKeys" resultMap="message" parameterClass="hashMap">
        SELECT m_id , from_user_id , to_user_id , content , read_or_not , message_type , send_time FROM message
        WHERE
        m_id in
        <iterate conjunction="," open="(" close=")" property="keys">
            #keys[]#
        </iterate>
    </select>

    <!-- 根据message_type查询 -->
    <select id="getMessageByType" resultMap="message" parameterClass="hashMap">
        SELECT m_id , from_user_id , to_user_id , content , read_or_not , message_type , send_time FROM message
        WHERE
        message_type=#messageType# and to_user_id = #toUserId#
    </select>

    <!-- 根据主键删除 -->
    <delete id="Message.deleteByKey" parameterClass="hashMap">
        DELETE FROM message
        WHERE
        m_id=#mId#
    </delete>

    <delete id="Message.deleteByKeys">
        DELETE FROM message
        WHERE
        m_id in
        <iterate conjunction="," open="(" close=")" property="keys">
            #keys[]#
        </iterate>
    </delete>

    <!-- 根据主键更新 -->
    <update id="updateMessageByKey" parameterClass="Message">
        UPDATE message
        <dynamic prepend="SET">
            <isNotNull prepend="," property="mId">
                m_id = #mId#
            </isNotNull>
            <isNotNull prepend="," property="fromUserId">
                from_user_id = #fromUserId#
            </isNotNull>
            <isNotNull prepend="," property="toUserId">
                to_user_id = #toUserId#
            </isNotNull>
            <isNotNull prepend="," property="content">
                content = substring(#content#,1,21820)
            </isNotNull>
            <isNotNull prepend="," property="readOrNot">
                read_or_not = #readOrNot#
            </isNotNull>
            <isNotNull prepend="," property="messageType">
                message_type = #messageType#
            </isNotNull>
            <isNotNull prepend="," property="sendTime">
                send_time = #sendTime#
            </isNotNull>
        </dynamic>
        WHERE
        m_id=#mId#
    </update>
    <!-- 分页 -->
    <select id="Message.getMessageListWithPage" parameterClass="MessageQuery" resultMap="message">
        <include refid="message.selector"/>
        <include refid="messageList.where"/>
        <include refid="messageList.order"/>
        <include refid="messageList.limit"/>
    </select>
    <select id="Message.getMessageListCount" parameterClass="MessageQuery" resultClass="int">
        SELECT count(1) FROM message
        <include refid="messageList.where"/>
    </select>
    <select id="Message.getMessageList" parameterClass="MessageQuery" resultMap="message">
        <include refid="message.selector"/>
        <include refid="messageList.where"/>
        <include refid="messageList.order"/>
    </select>

    <!-- 如果使用自定义字段查询,则要使用resultClass否则会出现异常-->
    <select id="Message.getMessageListWithPageFields" parameterClass="MessageQuery" resultClass="Message">
        <include refid="message.selector"/>
        <include refid="messageList.where"/>
        <include refid="messageList.order"/>
        <include refid="messageList.limit"/>
    </select>
    <select id="Message.getMessageListFields" parameterClass="MessageQuery" resultClass="Message">
        <include refid="message.selector"/>
        <include refid="messageList.where"/>
        <include refid="messageList.order"/>
    </select>
    <!--    <insert id="Message.insertMessage" parameterClass="Message">
    INSERT INTO message(
           m_id ,           from_user_id ,           to_user_id ,           content ,           read_or_not ,           message_type ,           send_time         VALUES(
            #mId# ,            #fromUserId# ,            #toUserId# ,            #content# ,            #readOrNot# ,            #messageType# ,            #sendTime#         )
    </insert>
    -->
    <insert id="Message.insertMessage" parameterClass="Message">
        INSERT INTO message
        <dynamic prepend="(" close=")">
            <isNotEmpty prepend="," property="mId">
                m_id
            </isNotEmpty>
            <isNotEmpty prepend="," property="fromUserId">
                from_user_id
            </isNotEmpty>
            <isNotEmpty prepend="," property="toUserId">
                to_user_id
            </isNotEmpty>
            <isNotEmpty prepend="," property="content">
                content
            </isNotEmpty>
            <isNotEmpty prepend="," property="readOrNot">
                read_or_not
            </isNotEmpty>
            <isNotEmpty prepend="," property="messageType">
                message_type
            </isNotEmpty>
            <isNotEmpty prepend="," property="sendTime">
                send_time
            </isNotEmpty>
        </dynamic>
        VALUES
        <dynamic prepend="(" close=")">
            <isNotEmpty prepend="," property="mId">
                #mId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="fromUserId">
                #fromUserId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="toUserId">
                #toUserId#
            </isNotEmpty>
            <isNotEmpty prepend="," property="content">
                substring(#content#,1,21820)
            </isNotEmpty>
            <isNotEmpty prepend="," property="readOrNot">
                #readOrNot#
            </isNotEmpty>
            <isNotEmpty prepend="," property="messageType">
                #messageType#
            </isNotEmpty>
            <isNotEmpty prepend="," property="sendTime">
                #sendTime#
            </isNotEmpty>
        </dynamic>
    </insert>

</sqlMap>
